{"version":3,"sources":["GameCard.js","App.js","reportWebVitals.js","index.js"],"names":["GameCard","title","graphic","availability","link","className","href","src","alt","App","useState","games","setGames","console","log","useEffect","fetch","then","response","json","data","Object","values","length","gameCards","entries","index","val","push","name","image","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAaeA,EAXE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KAC9C,OACI,sBAAKC,UAAU,WAAf,UACI,mBAAGC,KAAMF,EAAT,SACI,qBAAKG,IAAKL,EAASM,IAAKP,MAE5B,8BAAG,mBAAGK,KAAMF,EAAT,SAAgBH,IAAU,uBAA7B,cAA+CE,SCiC5CM,MArCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,KAQb,GANAC,QAAQC,IAAIH,GACZI,qBAAU,WACRC,MAAM,+CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIR,EAASS,OAAOC,OAAOF,SACtC,IACkB,IAAjBT,EAAMY,OACR,OACE,qBAAKlB,UAAU,MAAf,SACE,+DAIN,IAfa,EAePmB,EAAY,GAfL,cAgBcb,EAAMc,WAhBpB,IAgBb,2BAA4C,CAAC,IAAD,yBAAhCC,EAAgC,KAAzBC,EAAyB,KAC1CH,EAAUI,KAAK,cAAC,EAAD,CAAsB3B,MAAO0B,EAAIE,KAAM3B,QAASyB,EAAIG,MAAO3B,aAAcwB,EAAIxB,aAAcC,KAAMuB,EAAIvB,MAAtFsB,KAjBnB,8BAmBb,OACE,sBAAKrB,UAAU,MAAf,UACE,sDACA,qBAAKA,UAAU,eAAf,SACGmB,IAEH,sBAAKnB,UAAU,cAAf,UACE,qDACA,0cAEF,sBAAKA,UAAU,SAAf,UACE,mBAAGC,KAAK,0BAAR,yBACA,mBAAGA,KAAK,mCAAR,+BCvBOyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.9ae2d3f1.chunk.js","sourcesContent":["import './App.css';\r\n\r\nconst GameCard = ({ title, graphic, availability, link }) => {\r\n    return (\r\n        <div className=\"GameCard\">\r\n            <a href={link}>\r\n                <img src={graphic} alt={title} />\r\n            </a>\r\n            <p><a href={link}>{title}</a><br /> Available {availability}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameCard;\r\n","import './App.css';\nimport GameCard from \"./GameCard\"\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [games, setGames] = useState([]);\n  console.log(games);\n  useEffect(() => {\n    fetch('https://xbox-games-with-gold.herokuapp.com/')\n      .then(response => response.json())\n      .then(data => setGames(Object.values(data)));\n  }, [])\n  if (games.length === 0) {\n    return (\n      <div className=\"App\">\n        <h1>Fetching Available Games...</h1>\n      </div>\n    );\n  }\n  const gameCards = [];\n  for (const [index, val] of games.entries()) {\n    gameCards.push(<GameCard key={index} title={val.name} graphic={val.image} availability={val.availability} link={val.link} />)\n  }\n  return (\n    <div className=\"App\">\n      <h1>Xbox Games With Gold</h1>\n      <div className=\"CurrentGames\">\n        {gameCards}\n      </div>\n      <div className=\"Explanation\">\n        <h1>How Does This Work?</h1>\n        <p>Xbox Games With Gold are monthly free titles included in the Xbox Live Gold subscription. Users can claim games that are marked as available through Gold. Different regions may have different games available through the Gold programme - however users can simply login using that regionâ€™s Microsoft store and claim the game. This website shows every game available in each region through the Games with Gold programme.</p>\n      </div>\n      <div className=\"Footer\">\n        <a href=\"https://www.mikozyz.dev\">mikozyz.dev</a>\n        <a href=\"mailto:mikolajzyzanski@gmail.com\">Contact Me</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}